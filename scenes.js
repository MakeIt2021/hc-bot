const Scene = require('telegraf/scenes/base')
const fs = require("fs")

class Users {
    constructor(id, name, age, sex, height, weight, activity) {
        this.id = id;
        this.name = name;
        this.age = age;
        this.sex = sex;
        this.height = height;
        this.weight = weight;
        this.activity = activity;
    }
}

class tempData {
    constructor(id, water, time) {
        this.id = id
        this.water = water
        this.time = time
    }
}

function checkUser(id) {
    let data

    data = fs.readFileSync("db.txt", "utf8")
    if (data.includes(`"id":${id}`)) {
        let str = data.slice(data.indexOf(`"id":${id}`) - 1, data.indexOf('\n', data.indexOf(`"id":${id}`)))
        return JSON.parse(str)
    }
    return 0
}

let user = new Users()
let usersTempData = new tempData()
let user_id_start
let water_message_id



class SceneGenerator {
    GenCheckerScene() {
        const checker = new Scene('checker')
        checker.enter(async (ctx) => {
            user_id_start = ctx.message.from.id
            let data

            data = fs.readFileSync("db.txt", "utf8");
            // console.log(data)
            if (data.includes(`"id":${user_id_start}`)) {
                let str = data.slice(data.indexOf(`"id":${user_id_start}`) - 1, data.indexOf('\n', data.indexOf(`"id":${user_id_start}`)))
                const user = JSON.parse(str)

                await ctx.reply(`–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${user.name}. –†–∞–¥—ã –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—é!`)
                await ctx.scene.enter('mainMenu')
            } else {
                await ctx.scene.enter('hello')
            }
        })
        return checker
    }

    //======================================================\\ –ü–ï–†–í–û–ù–ê–ß–ê–õ–¨–ù–û–ï –ü–†–ò–í–ï–¢–°–¢–í–ò–ï //======================================================\\

    GenHelloScene() {
        const hello = new Scene('hello')
        hello.enter(async (ctx) => {
            await ctx.reply('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –î–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è. –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ, –∫–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?')
        })
        hello.on('text', async (ctx) => {
            let user_name = ctx.message.text

            let user_id = ctx.message.from.id
            user_id_start = ctx.message.from.id

            user.id = user_id
            user.name = user_name
            if (user_name) {
                await ctx.reply(`–ü—Ä–∏–≤–µ—Ç, ${user_name}`)
                await ctx.scene.enter('sex')
            } else {
                await ctx.reply('–Ø —Ç–∞–∫ –∏ –Ω–µ –ø–æ–Ω—è–ª, –∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç')
                await ctx.scene.reenter()
            }
        })
        hello.on('message', (ctx) => ctx.reply('–≠—Ç–æ —è–≤–Ω–æ –Ω–µ —Ç–≤–æ–µ –∏–º—è'))
        return hello
    }

    GenSexScene () {
        const sex = new Scene('sex')
        sex.enter(async (ctx) => {
            await ctx.reply('–ú–Ω–µ –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å –í–∞–º –µ—â—ë –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤. –î–ª—è –Ω–∞—á–∞–ª–∞, –∫—Ç–æ –í—ã?', {
                reply_markup: {
                    inline_keyboard: [
                        [
                            {text: '–Ø –º—É–∂—á–∏–Ω–∞', callback_data: 'male'}
                        ],
                        [
                            {text: '–Ø –∂–µ–Ω—â–∏–Ω–∞', callback_data: 'female'}
                        ]
                    ]
                }
            })
        })
        sex.action('male', async ctx => {
            ctx.deleteMessage()
            let user_sex = '–ú—É–∂—á–∏–Ω–∞'
            user.sex = user_sex

            await ctx.scene.enter('age')
        })
        sex.action('female', async ctx => {
            ctx.deleteMessage()
            let user_sex = '–ñ–µ–Ω—â–∏–Ω–∞'
            user.sex = user_sex

            await ctx.scene.enter('age')
        })
        return sex
    }

    GenAgeScene () {
        const age = new Scene('age')
        age.enter(async (ctx) => {
            await ctx.reply('–•–æ—Ä–æ—à–æ. –ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫–æ–ª—å–∫–æ –í–∞–º –ª–µ—Ç?')
        })
        age.on('text', async (ctx) => {
            let user_age = Number(ctx.message.text)
            let user_id = ctx.message.from.id

            if (user.id === user_id)
                user.age = String(user_age)
            if (user_age && user_age > 0) {
                await ctx.scene.enter('activity')
            } else {
                await ctx.reply('–ú–µ–Ω—è –Ω–µ –ø—Ä–æ–≤–µ–¥–µ—à—å! –ù–∞–ø–∏—à–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–æ–∑—Ä–∞—Å—Ç —Ü–∏—Ñ—Ä–∞–º–∏ –∏ –±–æ–ª—å—à–µ –Ω—É–ª—è')
                await ctx.scene.reenter()
            }
        })
        age.on('message', (ctx) => ctx.reply('–î–∞–≤–∞–π –ª—É—á—à–µ –≤–æ–∑—Ä–∞—Å—Ç'))
        return age
    }

    GenActivityScene () {
        const activity = new Scene('activity')
        activity.enter(async (ctx) => {
            await ctx.reply('–ò –ø–æ—Å–ª–µ–¥–Ω–µ–µ: –∫–∞–∫ —á–∞—Å—Ç–æ –í—ã –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å —Å–ø–æ—Ä—Ç–æ–º', {
                reply_markup: {
                    inline_keyboard: [
                        [
                            {text: '–£ –º–µ–Ω—è —Å–∏–¥—è—á–∞—è —Ä–∞–±–æ—Ç–∞ –∏ –Ω–µ—Ç —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –Ω–∞–≥—Ä—É–∑–æ–∫', callback_data: '1.2'}
                        ],
                        [
                            {text: '–Ø —Å–æ–≤–µ—Ä—à–∞—é –Ω–µ–±–æ–ª—å—à–∏–µ –ø—Ä–æ–±–µ–∂–∫–∏ –∏–ª–∏ –¥–µ–ª–∞—é –ª—ë–≥–∫—É—é –≥–∏–º–Ω–∞—Å—Ç–∏–∫—É 1 ‚Äì 3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é', callback_data: '1.375'}
                        ],
                        [
                            {text: '–Ø –∑–∞–Ω–∏–º–∞—é—Å—å —Å–ø–æ—Ä—Ç–æ–º —Å–æ —Å—Ä–µ–¥–Ω–∏–º–∏ –Ω–∞–≥—Ä—É–∑–∫–∞–º–∏ 3 ‚Äì 5 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é', callback_data: '1.55'}
                        ],
                        [
                            {text: '–Ø –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ —Ç—Ä–µ–Ω–∏—Ä—É—é—Å—å 6 ‚Äì 7 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é', callback_data: '1.725'}
                        ],
                        [
                            {text: '–ú–æ—è —Ä–∞–±–æ—Ç–∞ —Å–≤—è–∑–∞–Ω–∞ —Å —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º —Ç—Ä—É–¥–æ–º. –Ø —Ç—Ä–µ–Ω–∏—Ä—É—é—Å—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø–æ 2 —Ä–∞–∑–∞, –≤–∫–ª—é—á–∞—è —Å–∏–ª–æ–≤–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è', callback_data: '1.9'}
                        ]
                    ]
                }
            })
        })
        activity.action('1.2', async ctx => {
            ctx.deleteMessage()
            let user_activity = '1.2'
            user.activity = user_activity

            await ctx.scene.enter('height')
        })
        activity.action('1.375', async ctx => {
            ctx.deleteMessage()
            let user_activity = '1.375'
            user.activity = user_activity

            await ctx.scene.enter('height')
        })
        activity.action('1.55', async ctx => {
            ctx.deleteMessage()
            let user_activity = '1.55'
            user.activity = user_activity

            await ctx.scene.enter('height')
        })
        activity.action('1.725', async ctx => {
            ctx.deleteMessage()
            let user_activity = '1.725'
            user.activity = user_activity

            await ctx.scene.enter('height')
        })
        activity.action('1.9', async ctx => {
            ctx.deleteMessage()
            let user_activity = '1.9'
            user.activity = user_activity

            await ctx.scene.enter('height')
        })
        return activity
    }

    GenHeightScene () {
        const height = new Scene('height')
        height.enter(async (ctx) => {
            await ctx.reply('–°–ø–∞—Å–∏–±–æ. –ê –∫–∞–∫–æ–π —É –í–∞—Å —Ä–æ—Å—Ç?')
        })
        height.on('text', async (ctx) => {
            let user_height = Number(ctx.message.text)
            let user_id = ctx.message.from.id

            if (user.id === user_id)
                user.height = String(user_height)
            if (user_height && user_height > 0) {
                await ctx.scene.enter('weight')
            } else {
                await ctx.reply('–ú–µ–Ω—è –Ω–µ –ø—Ä–æ–≤–µ–¥–µ—à—å! –ù–∞–ø–∏—à–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–æ–∑—Ä–∞—Å—Ç —Ü–∏—Ñ—Ä–∞–º–∏ –∏ –±–æ–ª—å—à–µ –Ω—É–ª—è')
                await ctx.scene.reenter()
            }
        })
        height.on('message', (ctx) => ctx.reply('–î–∞–≤–∞–π –ª—É—á—à–µ —Ä–æ—Å—Ç'))
        return height
    }

    GenWeightScene () {
        const weight = new Scene('weight')
        weight.enter(async (ctx) => {
            await ctx.reply('–ë–ª–∞–≥–æ–¥–∞—Ä—é. –°–∫–æ–ª—å–∫–æ –í—ã –≤–µ—Å–∏—Ç–µ?')
        })
        weight.on('text', async (ctx) => {
            let user_weight = Number(ctx.message.text)

            let user_id = ctx.message.from.id
            if (user.id === user_id)
                user.weight = String(user_weight)
            if (user_weight && user_weight > 0) {
                await ctx.scene.enter('inTotal')
            } else {
                await ctx.reply('–ú–µ–Ω—è –Ω–µ –ø—Ä–æ–≤–µ–¥–µ—à—å! –ù–∞–ø–∏—à–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–æ–∑—Ä–∞—Å—Ç —Ü–∏—Ñ—Ä–∞–º–∏ –∏ –±–æ–ª—å—à–µ –Ω—É–ª—è')
                await ctx.scene.reenter()
            }
        })
        weight.on('message', (ctx) => ctx.reply('–î–∞–≤–∞–π –ª—É—á—à–µ –≤–µ—Å'))
        return weight
    }



    GenInTotalScene () {
        const inTotal = new Scene('inTotal')
        inTotal.enter(async (ctx) => {
            let user_id = ctx.message.from.id
            if (user.id === user_id && user_id === user_id_start) {
                await ctx.reply(`–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã, ${user.name}! –ò—Ç–∞–∫, –í—ã ${user.sex} –∏ –í–∞–º ${user.age} –ª–µ—Ç. –í–∞—à —Ä–æ—Å—Ç ${user.height}, –∞ –≤–µ—Å–∏—Ç–µ –í—ã ${user.weight} –∫–≥. –í—Å—ë –≤–µ—Ä–Ω–æ?`, {
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {text: '–í—Å—ë –≤–µ—Ä–Ω–æ üöÄ', callback_data: 'ok'}
                            ],
                            [
                                {text: '–ù–µ—Ç, –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å', callback_data: 'needToEdit'}
                            ]
                        ]
                    }
                })

                // buttons_clarify
                inTotal.action('ok', async ctx => {
                    ctx.deleteMessage()
                    fs.appendFileSync("db.txt", JSON.stringify(user) + "\n ------- \n")
                    await ctx.reply(user)
                    console.log(user)
                    await ctx.scene.enter('mainMenu')
                })

                inTotal.action('needToEdit', async ctx => {
                    ctx.deleteMessage()
                    await ctx.scene.enter('hello')
                })
            } else {
                await ctx.reply('–°–µ–π—á–∞—Å —Å–µ—Ä–≤–µ—Ä –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—É—é –Ω–∞–≥—Ä—É–∑–∫—É, –ø–æ—ç—Ç–æ–º—É –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. –ß—Ç–æ–±—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /start')
                //todo –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!
            }
        })
        return inTotal
    }

    //======================================================\\ –ó–ù–ê–ö–û–ú–°–¢–í–û –ó–ê–í–ï–†–®–ï–ù–û //======================================================\\
    GenMainMenuScene () {
        const mainMenu = new Scene('mainMenu')
        mainMenu.enter(async (ctx) => {//todo –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—Å—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é
            await ctx.reply(`–ú—ã –ø—Ä–æ–≤–æ–¥–∏–º —ç—Ç–∏ —Ä–∞—Å—á—ë—Ç—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∏–Ω–¥–µ–∫—Å–∞ –º–∞—Å—Å—ã —Ç–µ–ª–∞ ‚Äî –æ–±—ä–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π —Å–≤—è–∑—å –º–µ–∂–¥—É –º–∞—Å—Å–æ–π —Ç–µ–ª–∞ –∏ —Ä–æ—Å—Ç–æ–º. –ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ –æ —Ä–∞—Å—á—ë—Ç–∞—Ö –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–∏–≤ –∫–æ–º–∞–Ω–¥—É /about. –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é:`, {
                reply_markup: {
                    inline_keyboard: [
                        [
                            {text: '–í–æ–¥–∞', callback_data: 'water'},
                            {text: '–°–æ–Ω', callback_data: 'sleep'}
                        ],
                        [
                            {text: '–ü–∏—Ç–∞–Ω–∏–µ', callback_data: 'meals'}
                        ],
                        [
                            {text: '–°–ø–æ—Ä—Ç', callback_data: 'sport'},
                            {text: '–°—Ç—Ä–µ—Å—Å-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç', callback_data: 'stress'}
                        ]
                    ]
                }
            })
        })

        mainMenu.action('water', async ctx => {
            ctx.deleteMessage()
            await ctx.scene.enter('water')
        })
        mainMenu.action('sleep', async ctx => {
            ctx.deleteMessage()
            await ctx.scene.enter('sleep')
        })
        mainMenu.action('meals', async ctx => {
            ctx.deleteMessage()
            await ctx.scene.enter('meals')
        })
        mainMenu.action('sport', async ctx => {
            ctx.deleteMessage()
            await ctx.scene.enter('sport')
        })
        mainMenu.action('stress', async ctx => {
            ctx.deleteMessage()
            await ctx.scene.enter('stress')
        })
        return mainMenu
    }

    GenWaterScene () {
        const water = new Scene('water')
        water.enter(async (ctx) => {
            let user = checkUser(ctx.callbackQuery.from.id)
            let data = fs.readFileSync("db_temp_values.txt", "utf8");
            let str
            if (data.includes(`"id":${ctx.callbackQuery.from.id}`)) {
                str = data.slice(data.indexOf(`"id":${ctx.callbackQuery.from.id}`) - 1, data.indexOf('\n', data.indexOf(`"id":${ctx.callbackQuery.from.id}`)))
                usersTempData = JSON.parse(str)
                let now = new Date()
                let formerDate = usersTempData.time.slice(0, 2)
                let formerMonth = usersTempData.time.slice(3, 5)
                let formerYear = usersTempData.time.slice(6, 10)

                let nowDate = now.getDate().toString()
                if (nowDate.length === 1) {
                    nowDate = '0' + nowDate
                }
                let nowMonth = now.getMonth().toString()
                if (nowMonth.length === 1) {
                    nowMonth = '0' + nowMonth
                }

                if (formerDate !== nowDate || formerMonth !== nowMonth || formerYear !== now.getFullYear().toString()) {
                    fs.writeFileSync("db_temp_values.txt", "")
                    data = fs.readFileSync("db_temp_values.txt", "utf8")
                }
            }
            let water_recommended = Math.round(30 * user.weight / 200)
            await ctx.replyWithHTML(`–í–∞–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å <b>${water_recommended}</b> —Å—Ç–∞–∫–∞–Ω–æ–≤<a href="https://telegra.ph/file/28b7d002956f227c7d937.png"> </a>–≤–æ–¥—ã (–≤ –æ–¥–Ω–æ–º —Å—Ç–∞–∫–∞–Ω–µ –æ–∫–æ–ª–æ 200 –º–ª) –°–µ–≥–æ–¥–Ω—è –í—ã –≤—ã–ø–∏–ª–∏ ${str ? usersTempData.water : "0"}`, {
                reply_markup: {
                    inline_keyboard: [
                        [
                            {text: '+', callback_data: 'plus'},
                            {text: '-', callback_data: 'minus'}
                        ],
                        [
                            {text: '–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –ø–æ–ª—å–∑–µ –≤–æ–¥—ã', callback_data: 'lmWater'}
                        ],
                        [
                            {text: '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back'}
                        ]
                    ]
                }
            })
        })

        water.action('plus', async ctx => {
            usersTempData.id = ctx.callbackQuery.from.id
            await ctx.deleteMessage()
            let data = fs.readFileSync("db_temp_values.txt", "utf8");
            if (data.includes(`"id":${ctx.callbackQuery.from.id}`)) {
                let str = data.slice(data.indexOf(`"id":${ctx.callbackQuery.from.id}`) - 1, data.indexOf('\n', data.indexOf(`"id":${ctx.callbackQuery.from.id}`)))
                usersTempData = JSON.parse(str)
                let formerDate = usersTempData.time.slice(0, 2)
                let formerMonth = usersTempData.time.slice(3, 5)
                let formerYear = usersTempData.time.slice(6, 10)
                console.log(formerYear)
                usersTempData.water += 1
                let now = new Date();
                let nowDate = now.getDate().toString()
                if (nowDate.length === 1) {
                    nowDate = '0' + nowDate
                }
                let nowMonth = now.getMonth().toString()
                if (nowMonth.length === 1) {
                    nowMonth = '0' + nowMonth
                }
                if (formerDate !== nowDate || formerMonth !== nowMonth || formerYear !== now.getFullYear().toString()) {
                    fs.writeFileSync("db_temp_values.txt", "")
                }
                let data2 = fs.readFileSync("db_temp_values.txt", "utf8")

                usersTempData.time = nowDate + "-" + nowMonth + "-" + now.getFullYear()

                data2 = data2.replace(`{"id":${ctx.callbackQuery.from.id},"water":${usersTempData.water - 1},"time":"${formerDate}-${formerMonth}-${formerYear}"}\n ------- \n`, '')
                fs.writeFileSync("db_temp_values.txt", JSON.stringify(usersTempData) + "\n ------- \n" + data2)
                await ctx.scene.enter('water')
            } else {
                usersTempData.water = 1
                let now = new Date();
                let nowDate = now.getDate().toString()
                if (nowDate.length === 1) {
                    nowDate = '0' + nowDate
                }
                let nowMonth = now.getMonth().toString()
                if (nowMonth.length === 1) {
                    nowMonth = '0' + nowMonth
                }
                console.log(now.getMonth().toString().length)
                usersTempData.time = nowDate + "-" + nowMonth + "-" + now.getFullYear()
                let value = JSON.stringify(usersTempData) + "\n ------- \n"
                fs.appendFileSync("db_temp_values.txt", value)
                await ctx.scene.enter('water')
            }
        })

        water.action('minus', async ctx => {
            usersTempData.id = ctx.callbackQuery.from.id
            ctx.deleteMessage(water_message_id)
            let data = fs.readFileSync("db_temp_values.txt", "utf8");
            if (data.includes(`"id":${ctx.callbackQuery.from.id}`)) {
                let str = data.slice(data.indexOf(`"id":${ctx.callbackQuery.from.id}`) - 1, data.indexOf('\n', data.indexOf(`"id":${ctx.callbackQuery.from.id}`)))
                usersTempData = JSON.parse(str)
                let formerDate = usersTempData.time.slice(0, 2)
                let formerMonth = usersTempData.time.slice(3, 5)
                let formerYear = usersTempData.time.slice(6, 10)

                if (usersTempData.water >= 1) {
                    usersTempData.water -= 1
                    let now = new Date();
                    let nowDate = now.getDate().toString()
                    if (nowDate.length === 1) {
                        nowDate = '0' + nowDate
                    }
                    let nowMonth = now.getMonth().toString()
                    if (nowMonth.length === 1) {
                        nowMonth = '0' + nowMonth
                    }
                    if (formerDate != nowDate || formerMonth != nowMonth || formerYear != now.getFullYear().toString()) {
                        fs.writeFileSync("db_temp_values.txt", "")
                    }

                    let data2 = fs.readFileSync("db_temp_values.txt", "utf8")
                    usersTempData.time = nowDate + "-" + nowMonth + "-" + now.getFullYear()
                    data2 = data2.replace(`{"id":${ctx.callbackQuery.from.id},"water":${usersTempData.water + 1},"time":"${formerDate}-${formerMonth}-${formerYear}"}\n ------- \n`, '')
                    fs.writeFileSync("db_temp_values.txt", JSON.stringify(usersTempData) + "\n ------- \n" + data2)
                    await ctx.scene.enter('water')
                } else {
                    await ctx.scene.enter('water')
                }
            }
        })

        water.action('back', async ctx => {
            ctx.deleteMessage()
            ctx.scene.enter('mainMenu')
        })

        water.action('lmWater', async ctx => {
            ctx.scene.enter('whyWater')
        })
        return water
    }

    GenWhyWaterScene() {
        const whyWater = new Scene('whyWater')
        whyWater.enter(async ctx => {
            ctx.deleteMessage()
            await ctx.reply('–í—Å–µ –∑–Ω–∞—é—Ç, —á—Ç–æ –±–µ–∑ –≤–æ–¥—ã –∂–∏—Ç—å –Ω–µ–ª—å–∑—è. –ê –¥–ª—è —á–µ–≥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –Ω—É–∂–Ω–∞ –≤–æ–¥–∞?\n' +
                '\n' +
                '–í–æ–¥–∞ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤–æ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö, –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–∏—Ö –≤ –æ—Ä–≥–∞–Ω–∏–∑–º–µ –∫–∞–∂–¥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞. \n' +
                '\n' +
                '–í–æ–¥–∞ –ø–æ–º–æ–≥–∞–µ—Ç –ø–∏—â–µ–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –ª—É—á—à–µ —É—Å–≤–∞–∏–≤–∞—Ç—å –ø–∏—â—É, —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ —Ç–µ—Ä–º–æ—Ä–µ–≥—É–ª—è—Ü–∏–∏, –ø–æ–º–æ–≥–∞—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É —Ç–µ–ª–∞, –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–≤–æ–±–æ–¥–Ω–æ–µ –∫—Ä–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–∏–µ, —Å–Ω–∏–∂–∞–µ—Ç –≤—è–∑–∫–æ—Å—Ç—å –∫—Ä–æ–≤–∏, –ø–æ–º–æ–≥–∞–µ—Ç —Å–Ω–∞–±–∂–∞—Ç—å –∫–∏—Å–ª–æ—Ä–æ–¥–æ–º –≤—Å–µ –æ—Ä–≥–∞–Ω—ã –∏ —Ç–∫–∞–Ω–∏ –æ—Ä–≥–∞–Ω–∏–∑–º–∞. –° –ø–æ–º–æ—â—å—é –≤–æ–¥—ã –∏–∑ –æ—Ä–≥–∞–Ω–∏–∑–º–∞ –≤—ã–≤–æ–¥—è—Ç—Å—è –Ω–µ–Ω—É–∂–Ω—ã–µ —Å–æ–ª–∏ –∏ —Ç–æ–∫—Å–∏–Ω—ã, —É–ª—É—á—à–∞–µ—Ç—Å—è –ø–æ–¥–≤–∏–∂–Ω–æ—Å—Ç—å —Å—É—Å—Ç–∞–≤–æ–≤.\n' +
                '\n' +
                '–ò–º–µ–Ω–Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è —Å–æ–±–ª—é–¥–µ–Ω–∏—é –ø–∏—Ç—å–µ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞ –≤ –æ—Ä–≥–∞–Ω–∏–∑–º–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–æ–¥—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –µ—ë —Ñ—É–Ω–∫—Ü–∏–π.', {
                reply_markup: {
                    inline_keyboard: [
                        [
                            {text: '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back'}
                        ]
                    ]
                }
            })
        })

        whyWater.action('back', async ctx => {
            ctx.deleteMessage()
            await ctx.scene.enter('mainMenu')
        })

        return whyWater
    }



    GenSleepScene () {
        const sleep = new Scene('sleep')
        sleep.enter(async (ctx) => {
            await ctx.reply('–°–æ–Ω ‚Äî —ç—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –≤–æ –≤—Ä–µ–º—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–º–∞ —Å –≤–Ω–µ—à–Ω–∏–º –º–∏—Ä–æ–º –∑–∞—Ç–æ—Ä–º–∞–∂–∏–≤–∞–µ—Ç—Å—è, –∞ –æ—Å–æ–∑–Ω–∞–≤–∞–µ–º–∞—è –ø—Å–∏—Ö–∏—á–µ—Å–∫–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–∞—Å—Ç–∏—á–Ω–æ –ø—Ä–µ–∫—Ä–∞—â–∞–µ—Ç—Å—è. –°–æ–Ω –æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ—á—Ç–∏ –Ω–∞ –≤—Å–µ –æ—Ä–≥–∞–Ω—ã –∏ —Å–∏—Å—Ç–µ–º—ã –æ—Ä–≥–∞–Ω–∏–∑–º–∞ ‚Äî –æ—Ç –º–æ–∑–≥–∞, —Å–µ—Ä–¥—Ü–∞ –∏ –ª–µ–≥–∫–∏—Ö –¥–æ –∏–º–º—É–Ω–Ω–æ–π –∏ –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.\n' +
                '\n' +
                '–î–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–Ω–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—Ç–∞—Ä–∞—Ç—å—Å—è —Å–æ–±–ª—é–¥–∞—Ç—å —Ä–µ–∂–∏–º —Å–Ω–∞, —Ç–æ –µ—Å—Ç—å –ª–æ–∂–∏—Ç—å—Å—è —Å–ø–∞—Ç—å –∏ –ø—Ä–æ—Å—ã–ø–∞—Ç—å—Å—è –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –≤—Ä–µ–º—è. –≠—Ç–æ –≤–∞–∂–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ—Ä–≥–∞–Ω–∏–∑–º—É –ø—Ä–æ—â–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å, –∏–º—è —É—Å—Ç–æ—è–≤—à–∏–π—Å—è –≥—Ä–∞—Ñ–∏–∫. \n' +
                '\n' +
                '–ú–µ–ª–∞—Ç–æ–Ω–∏–Ω, –∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–∫ –≥–æ—Ä–º–æ–Ω —Å–Ω–∞, –≤–ª–∏—è–µ—Ç –Ω–∞ –º–Ω–æ–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ä–≥–∞–Ω–∏–∑–º–∞: —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ —Ä–∞–±–æ—Ç–µ –∂–µ–ª—É–¥–æ—á–Ω–æ-–∫–∏—à–µ—á–Ω–æ–≥–æ —Ç—Ä–∞–∫—Ç–∞, —ç–Ω–¥–æ–∫—Ä–∏–Ω–Ω–æ–π –∏ –∏–º–º—É–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã, –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–µ—Ç–æ–∫ –º–æ–∑–≥–∞. –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –æ—Ç—Ö–æ–¥–∏—Ç—å –∫–æ —Å–Ω—É –¥–æ 23:00, —Ç.–∫. –º–µ–ª–∞—Ç–æ–Ω–∏–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç –≤—ã—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏–º–µ—Ä–Ω–æ —Å 00:00, –∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç –¥–æ 04:00. \n' +
                '\n' +
                '–ì–ª–∞–≤–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ –≤—ã—Ä–∞–±–æ—Ç–∫–∏ –º–µ–ª–∞—Ç–æ–Ω–∏–Ω–∞ ‚Äî –ø–æ–ª–Ω–∞—è —Ç–µ–º–Ω–æ—Ç–∞ (–ø–ª–æ—Ç–Ω—ã–µ —à—Ç–æ—Ä—ã –í–∞–º –≤ –ø–æ–º–æ—â—å). –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —ç—Ç–æ –º–æ–∂–Ω–æ —Ç–∞–∫: –í—ã –Ω–µ –¥–æ–ª–∂–Ω—ã –≤–∏–¥–µ—Ç—å —Å–≤–æ–µ–π –≤—ã—Ç—è–Ω—É—Ç–æ–π —Ä—É–∫–∏. \n' +
                '\n' +
                '–ï—Å–ª–∏ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å–Ω—É—Ç—å, –≤–æ–∑—å–º–∏—Ç–µ –Ω–∞ –∑–∞–º–µ—Ç–∫—É –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–≤–µ—Ç–æ–≤:\n' +
                '\n' +
                '–ü—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–π—Ç–µ —Å–ø–∞–ª—å–Ω—é –ø–µ—Ä–µ–¥ —Å–Ω–æ–º\n' +
                '–ï—à—å—Ç–µ –º–∏–Ω–∏–º—É–º –∑–∞ 3 —á–∞—Å–∞ –¥–æ —Å–Ω–∞\n' +
                '–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ –í–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ –∞–±—Å–æ–ª—é—Ç–Ω–∞—è —Ç–µ–º–Ω–æ—Ç–∞\n' +
                '–í–∫–ª—é—á–∞–π—Ç–µ —Ñ–∏–ª—å—Ç—Ä —Å–∏–Ω–µ–≥–æ –Ω–∞ –í–∞—à–∏—Ö –≥–∞–¥–∂–µ—Ç–∞—Ö –±–ª–∏–∂–µ –∫ –≤–µ—á–µ—Ä—É\n' +
                '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –º—ã—Å–ª–∏ —Å –±—É–¥–Ω–∏—á–Ω–æ–π —Å—É–µ—Ç—ã –Ω–∞ –≤–æ–ª–Ω—É —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—è, –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Å–≤–æ–π —Ä–∏—Ç—É–∞–ª –ø–µ—Ä–µ–¥ —Å–Ω–æ–º. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —á—Ç–µ–Ω–∏–µ –∫–Ω–∏–≥–∏, —Ç—ë–ø–ª–∞—è –≤–∞–Ω–Ω–∞, –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è (–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –ø–∞—Ä—É –≤ —Ä–∞–∑–¥–µ–ª–µ –°—Ç—Ä–µ—Å—Å-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç), –º–µ–¥–∏—Ç–∞—Ü–∏–∏.', {
                reply_markup: {
                    inline_keyboard: [
                        [
                            {text: '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back'}
                        ]
                    ]
                }
            })
        })

        sleep.action('back', async ctx => {
            ctx.deleteMessage()
            await ctx.scene.enter('mainMenu')
        })
        return sleep
    }

    GenMealsScene () {
        // TODO: –Ω–∞–ø–∏—Å–∞—Ç—å, —á—Ç–æ –≤—Å—ë —ç—Ç–æ —Å 16 –ª–µ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–Ω—è—Ç—å —Å —Å–µ–±—è –æ—Ç–≤–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å

        const meals = new Scene('meals')

        meals.enter(async (ctx) => {
            let user = checkUser(ctx.callbackQuery.from.id)
            if (await user) {
                let calories, protein, fats, carbohydrates, bmi, bmi_result
                bmi = user.weight / Math.pow(user.height / 100, 2)

                if (user.sex === '–ñ–µ–Ω—â–∏–Ω–∞') {
                    calories = ((10 * parseInt(user.weight)) + (6.25 * parseInt(user.height)) - (5 * parseInt(user.age)) - 161) * parseFloat(user.activity)
                } else {
                    calories = (10 * parseInt(user.weight) + 6.25 * parseInt(user.height) - 5 * parseInt(user.age) + 5) * parseFloat(user.activity)
                }

                if (user.activity === "1.2") {
                    protein = parseInt(user.weight)
                    fats = parseInt(user.weight) * 0.9
                    carbohydrates = parseInt(user.weight) * 4
                } else if (user.activity === "1.375" || user.activity === "1.55") {
                    protein = parseInt(user.weight) * 1.2
                    fats = parseInt(user.weight) * 1.2
                    console.error(user.weight)
                    carbohydrates = parseInt(user.weight) * 6
                } else {
                    protein = parseInt(user.weight) * 2
                    fats = parseInt(user.weight) * 1.5
                    carbohydrates = parseInt(user.weight) * 8.5
                }

                bmi = bmi.toFixed(2)
                calories = Math.round(calories)
                protein = Math.round(protein)
                fats = Math.round(fats)
                carbohydrates = Math.round(carbohydrates)

                let result = '–æ—à–∏–±–∫–∞'

                if (bmi < 18.5) {
                    bmi_result = '–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –≤–µ—Å'
                    result = '–í–∞—à –ò–ú–¢ ~${bmi}, —ç—Ç–æ –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –≤–µ—Å–∞. –ó–∞–¥–∞–π—Ç–µ —Å–µ–±–µ –≤–æ–ø—Ä–æ—Å, —á–∞—Å—Ç–æ –ª–∏ –±—ã–≤–∞–µ—Ç, —á—Ç–æ –í—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —Å–µ–±—è —É—Å—Ç–∞–≤—à–∏–º? \n' +
                        '\n' +
                        '–í —Å–ª—É—á–∞–µ —É—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞, –í–∞–º –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É, –≤–µ–¥—å –¥–æ–≤–æ–ª—å–Ω–æ —á–∞—Å—Ç–æ, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–µ—Ñ–∏—Ü–∏—Ç –º–∞—Å—Å—ã —Ç–µ–ª–∞ –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –æ —Ç–µ—Ö –∏–ª–∏ –∏–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å–æ –∑–¥–æ—Ä–æ–≤—å–µ–º.\n' +
                        '\n' +
                        '–ï—Å–ª–∏ –í–∞—à –æ—Ç–≤–µ—Ç: "–ù–µ—Ç, —è –Ω–µ—á–∞—Å—Ç–æ –±–µ–∑ –≤–∏–¥–∏–º–æ–≥–æ –ø–æ–≤–æ–¥–∞ —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —É—Å—Ç–∞–≤—à–∏–º, —Å–ª–∞–±—ã–º", –∏ –í—ã –Ω–µ –∂–∞–ª—É–µ—Ç–µ—Å—å –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ, –æ–±—ã—á–Ω–æ —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —Å–µ–±—è –±–æ–¥—Ä—ã–º, —Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –í–∞–º –Ω–µ —Å—Ç–æ–∏—Ç –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è, –æ–¥–Ω–∞–∫–æ –≤ –∏–¥–µ–∞–ª–µ, —Å—Ç–æ–∏—Ç –Ω–∞—á–∞—Ç—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ –ø—Ä–∏—Å–ª—É—à–∏–≤–∞—Ç—å—Å—è –∫ —Å–≤–æ–µ–º—É –æ—Ä–≥–∞–Ω–∏–∑–º—É –∏ –≤ —Å–ª—É—á–∞–µ —á–µ–≥–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É. –í–æ–∑–º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Ç–∞–∫–∂–µ –Ω–µ–ø–ª–æ—Ö–æ —Å–¥–µ–ª–∞—Ç—å –±–∏–æ–∏–º–ø–µ–¥–∞–Ω—Å–æ–º–µ—Ç—Ä–∏—é, —Å–¥–∞—Ç—å –±–∞–∑–æ–≤—ã–µ –∞–Ω–∞–ª–∏–∑—ã –ø–µ—Ä–µ–¥ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–µ–π.\n' +
                        '\n' +
                        '–ú—ã –ø–æ—Å—á–∏—Ç–∞–ª–∏, —á—Ç–æ –í–∞–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å ~${calories} –∫–∞–ª–æ—Ä–∏–π –≤ —Å—É—Ç–∫–∏ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –≤–µ—Å–∞.' +
                        '\n' +
                        '\n' +
                        '–ö—Å—Ç–∞—Ç–∏, –º—ã —Ç–∞–∫–∂–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ —Å—Ç–∞—Ç—å—é –æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–∏—Ç–∞–Ω–∏–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º, –∑–∞—á–µ–º –æ–Ω–æ –Ω—É–∂–Ω–æ –∏ –∫–∞–∫ –µ–≥–æ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è: https://telegra.ph/nutrition-02-04'
                } else if (18.5 <= bmi && bmi < 24.9) {
                    bmi_result = '–Ω–æ—Ä–º–∞–ª—å–Ω—ã–π'
                    result = `–í–∞—à –ò–ú–¢ ~${bmi}. –≠—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–º, —á—Ç–æ —É –í–∞—Å –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–µ—Å, –æ–¥–Ω–∞–∫–æ –∫–∞–∂–¥–æ–º—É —á–µ–ª–æ–≤–µ–∫—É, –¥–∞–∂–µ –µ—Å–ª–∏ —É –Ω–µ–≥–æ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ —Å –≤–µ—Å–æ–º –≤–∞–∂–Ω–æ —Å–æ–±–ª—é–¥–∞—Ç—å –ø–∏—Ç—å–µ–≤–æ–π —Ä–µ–∂–∏–º, –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º, –∞ —Ç–∞–∫–∂–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –æ—Ç—Ö–æ–¥–∞ –∫–æ —Å–Ω—É –∏ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è. –¢–∞–∫–∂–µ, –≤—Å–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–º–µ—Ç—å —É–ø—Ä–∞–≤–ª—è—Ç—å —É—Ä–æ–≤–Ω–µ–º —Å—Ç—Ä–µ—Å—Å–∞, –≤–µ–¥—å –≥–æ—Ä–º–æ–Ω—ã —Å—Ç—Ä–µ—Å—Å–∞ –º–æ–≥—É—Ç –ø—Ä–∏–≤–æ–¥–∏—Ç—å –∫ —Å–Ω–∏–∂–µ–Ω–∏—é –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞ –∏ –ø–æ—è–≤–ª–µ–Ω–∏—é –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–±–ª–µ–º —Å–æ –∑–¥–æ—Ä–æ–≤—å–µ–º.
–ú—ã –ø–æ—Å—á–∏—Ç–∞–ª–∏, —á—Ç–æ –í–∞–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å ~${calories} –∫–∞–ª–æ—Ä–∏–π –≤ —Å—É—Ç–∫–∏ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –í–∞—à–µ–≥–æ –≤–µ—Å–∞.` +
                        '\n' +
                        '\n' +
                        '–ö—Å—Ç–∞—Ç–∏, –º—ã —Ç–∞–∫–∂–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ —Å—Ç–∞—Ç—å—é –æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–∏—Ç–∞–Ω–∏–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º, –∑–∞—á–µ–º –æ–Ω–æ –Ω—É–∂–Ω–æ –∏ –∫–∞–∫ –µ–≥–æ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è: https://telegra.ph/nutrition-02-04'
                } else if (25 <= bmi && bmi <= 29.9) {
                    bmi_result = '—á—Ä–µ–∑–º–µ—Ä–Ω—ã–π –≤–µ—Å'
                    result = `–í–∞—à –ò–ú–¢ ~${bmi}, —ç—Ç–æ –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏–∑–±—ã—Ç–æ—á–Ω–æ–π –º–∞—Å—Å—ã —Ç–µ–ª–∞, –ø—Ä–µ–¥–æ–∂–∏—Ä–µ–Ω–∏–µ. –≠—Ç–æ –µ—â—ë –Ω–µ –±–æ–ª–µ–∑–Ω—å, –Ω–æ —É–∂–µ —Å–∏–≥–Ω–∞–ª –Ω–∞ —Ç–æ, —á—Ç–æ —Å–ª–µ–¥—É–µ—Ç –≤–∑—è—Ç—å —Å–≤–æ–π –≤–µ—Å –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª—å.\n` +
                        '\n' +
                        '–í–∞–º —Ç–æ—á–Ω–æ —Å—Ç–æ–∏—Ç –Ω–∞—á–∞—Ç—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ –ø—Ä–∏—Å–ª—É—à–∏–≤–∞—Ç—å—Å—è –∫ —Å–≤–æ–µ–º—É –æ—Ä–≥–∞–Ω–∏–∑–º—É –∏ –≤ —Å–ª—É—á–∞–µ —á–µ–≥–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É. –í–æ–∑–º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Ç–∞–∫–∂–µ –Ω–µ–ø–ª–æ—Ö–æ —Å–¥–µ–ª–∞—Ç—å –±–∏–æ–∏–º–ø–µ–¥–∞–Ω—Å–æ–º–µ—Ç—Ä–∏—é, —Å–¥–∞—Ç—å –±–∞–∑–æ–≤—ã–µ –∞–Ω–∞–ª–∏–∑—ã –ø–µ—Ä–µ–¥ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–µ–π.\n' +
                        '\n' +
                        '–ß—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏, –º—ã –±—ã –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞–ª–∏ –í–∞–º —á–∞—â–µ —Å–æ–≤–µ—Ä—à–∞—Ç—å –ø—Ä–æ–≥—É–ª–∫–∏ –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ, –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ª–µ—Å—Ç–Ω–∏—Ü–µ–π –≤–º–µ—Å—Ç–æ –ª–∏—Ñ—Ç–∞, –∑–∞–Ω—è—Ç—å—Å—è —Ç–∞–Ω—Ü–∞–º–∏, –ø–ª–∞–≤–∞–Ω–∏–µ–º, –±–µ–≥–æ–º, –∞—ç—Ä–æ–±–∏–∫–æ–π, –ª–µ—Ç–æ–º –∫–∞—Ç–∞—Ç—å—Å—è –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ, –∞ –∑–∏–º–æ–π –Ω–∞ –ª—ã–∂–∞—Ö. –í —Ä–∞–∑–¥–µ–ª–µ –°–ø–æ—Ä—Ç –µ—Å—Ç—å –µ—â—ë –ø–æ–¥—Å–∫–∞–∑–∫–∏.\n' +
                        '\n' +
                        `–ú—ã –ø–æ—Å—á–∏—Ç–∞–ª–∏, —á—Ç–æ –í–∞–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å ~${calories} –∫–∞–ª–æ—Ä–∏–π –≤ —Å—É—Ç–∫–∏. –≠—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –≤–µ—Å–∞, –∞ –Ω–µ –µ–≥–æ —Å–Ω–∏–∂–µ–Ω–∏—è. –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –ø–ª–∞–Ω —Å–Ω–∏–∂–µ–Ω–∏—è –≤–µ—Å–∞ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç. `
                } else if (30 <= bmi && bmi <= 34.9) {
                    bmi_result = '–æ–∂–∏—Ä–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–π —Å—Ç–µ–ø–µ–Ω–∏'
                    result = `–í–∞—à –ò–ú–¢ ~${bmi}, —ç—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ –æ–∂–∏—Ä–µ–Ω–∏–µ I —Å—Ç–µ–ø–µ–Ω–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫–∞–∫ –º—ã —Å—á–∏—Ç–∞–ª–∏, –∏ –∫ –∫–æ–º—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–∞—è –∑–¥–µ—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –æ—Ç–ø—Ä–∞–≤–∏–≤ –∫–æ–º–∞–Ω–¥—É /about. –° —É–≤–µ–ª–∏—á–µ–Ω–∏–µ–º —Å—Ç–µ–ø–µ–Ω–∏ –æ–∂–∏—Ä–µ–Ω–∏—è —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —Ä–∏—Å–∫ —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π ‚Äì –æ—Ç –≤—ã—Å–æ–∫–æ–≥–æ –¥–æ —á—Ä–µ–∑–≤—ã—á–∞–π–Ω–æ –≤—ã—Å–æ–∫–æ–≥–æ.\n` +
                        '\n' +
                        `–ú—ã –±—ã —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–ª–∏ –í–∞–º –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É —ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥—É. –ò–º–µ–Ω–Ω–æ –æ–Ω –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Å—Ç–∏ –≥—Ä–∞–º–æ—Ç–Ω–æ–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∏ –¥–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ –≤–æ–∑–º–æ–∂–Ω—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è. \n` +
                        '\n' +
                        `–õ–µ—á–µ–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ, —Ç.–∫. —á–∞—Å—Ç–æ –∏–∑-–∑–∞ –æ–∂–∏—Ä–µ–Ω–∏—è —Ä–µ–∑–∫–æ –≤–æ–∑—Ä–∞—Å—Ç–∞—é—Ç —Ä–∏—Å–∫–∏ —Ä–∞–∑–≤–∏—Ç–∏—è –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç–æ–π, –æ–ø–æ—Ä–Ω–æ-–¥–≤–∏–≥–∞—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã, –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –æ–Ω–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π. –ë–æ–ª—å—à–µ –æ–± —ç—Ç–æ–º –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –≤ —Å—Ç–∞—Ç—å–µ –≤—Å–µ–º–∏—Ä–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.` +
                        '\n' +
                        '\n' +
                        '–ö—Å—Ç–∞—Ç–∏, –º—ã —Ç–∞–∫–∂–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ —Å—Ç–∞—Ç—å—é –æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–∏—Ç–∞–Ω–∏–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º, –∑–∞—á–µ–º –æ–Ω–æ –Ω—É–∂–Ω–æ –∏ –∫–∞–∫ –µ–≥–æ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è: https://telegra.ph/nutrition-02-04'
                } else if (35 <= bmi && bmi <= 39.9) {
                    bmi_result = '–æ–∂–∏—Ä–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–π —Å—Ç–µ–ø–µ–Ω–∏'
                    result = `–í–∞—à –ò–ú–¢ ~${bmi}, —ç—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ –æ–∂–∏—Ä–µ–Ω–∏–µ II —Å—Ç–µ–ø–µ–Ω–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫–∞–∫ –º—ã —Å—á–∏—Ç–∞–ª–∏, –∏ –∫ –∫–æ–º—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–∞—è –∑–¥–µ—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –æ—Ç–ø—Ä–∞–≤–∏–≤ –∫–æ–º–∞–Ω–¥—É /about. –° —É–≤–µ–ª–∏—á–µ–Ω–∏–µ–º —Å—Ç–µ–ø–µ–Ω–∏ –æ–∂–∏—Ä–µ–Ω–∏—è —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —Ä–∏—Å–∫ —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π ‚Äì –æ—Ç –≤—ã—Å–æ–∫–æ–≥–æ –¥–æ —á—Ä–µ–∑–≤—ã—á–∞–π–Ω–æ –≤—ã—Å–æ–∫–æ–≥–æ.
–ú—ã –±—ã –æ—á–µ–Ω—å —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–ª–∏ –í–∞–º –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É —ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥—É. –ò–º–µ–Ω–Ω–æ –æ–Ω –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Å—Ç–∏ –≥—Ä–∞–º–æ—Ç–Ω–æ–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∏ –¥–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ –≤–æ–∑–º–æ–∂–Ω—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è. 
–õ–µ—á–µ–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ, —Ç.–∫. —á–∞—Å—Ç–æ –∏–∑-–∑–∞ –æ–∂–∏—Ä–µ–Ω–∏—è —Ä–µ–∑–∫–æ –≤–æ–∑—Ä–∞—Å—Ç–∞—é—Ç —Ä–∏—Å–∫–∏ —Ä–∞–∑–≤–∏—Ç–∏—è –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç–æ–π, –æ–ø–æ—Ä–Ω–æ-–¥–≤–∏–≥–∞—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã, –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –æ–Ω–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π. –ë–æ–ª—å—à–µ –æ–± —ç—Ç–æ–º –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –≤ —Å—Ç–∞—Ç—å–µ –≤—Å–µ–º–∏—Ä–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.` +
                        '\n' +
                        '\n' +
                        '–ö—Å—Ç–∞—Ç–∏, –º—ã —Ç–∞–∫–∂–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ —Å—Ç–∞—Ç—å—é –æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–∏—Ç–∞–Ω–∏–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º, –∑–∞—á–µ–º –æ–Ω–æ –Ω—É–∂–Ω–æ –∏ –∫–∞–∫ –µ–≥–æ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è: https://telegra.ph/nutrition-02-04'
                } else if (bmi >= 40) {
                    bmi_result = '–æ–∂–∏—Ä–µ–Ω–∏–µ —Ç—Ä–µ—Ç—å–µ–π —Å—Ç–µ–ø–µ–Ω–∏'
                    result = `–í–∞—à –ò–ú–¢ ~${bmi}, —ç—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ –æ–∂–∏—Ä–µ–Ω–∏–µ III —Å—Ç–µ–ø–µ–Ω–∏ (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å –æ–∂–∏—Ä–µ–Ω–∏—è). –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫–∞–∫ –º—ã —Å—á–∏—Ç–∞–ª–∏, –∏ –∫ –∫–æ–º—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–∞—è –∑–¥–µ—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –æ—Ç–ø—Ä–∞–≤–∏–≤ –∫–æ–º–∞–Ω–¥—É /about. –° —É–≤–µ–ª–∏—á–µ–Ω–∏–µ–º —Å—Ç–µ–ø–µ–Ω–∏ –æ–∂–∏—Ä–µ–Ω–∏—è —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —Ä–∏—Å–∫ —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π ‚Äì –æ—Ç –≤—ã—Å–æ–∫–æ–≥–æ –¥–æ —á—Ä–µ–∑–≤—ã—á–∞–π–Ω–æ –≤—ã—Å–æ–∫–æ–≥–æ.
–ú—ã –±—ã –æ—á–µ–Ω—å —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–ª–∏ –í–∞–º –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É —ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥—É. –ò–º–µ–Ω–Ω–æ –æ–Ω –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Å—Ç–∏ –≥—Ä–∞–º–æ—Ç–Ω–æ–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∏ –¥–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ –≤–æ–∑–º–æ–∂–Ω—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è. 
–õ–µ—á–µ–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ, —Ç.–∫. —á–∞—Å—Ç–æ –∏–∑-–∑–∞ –æ–∂–∏—Ä–µ–Ω–∏—è —Ä–µ–∑–∫–æ –≤–æ–∑—Ä–∞—Å—Ç–∞—é—Ç —Ä–∏—Å–∫–∏ —Ä–∞–∑–≤–∏—Ç–∏—è –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç–æ–π, –æ–ø–æ—Ä–Ω–æ-–¥–≤–∏–≥–∞—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã, –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –æ–Ω–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π. –ë–æ–ª—å—à–µ –æ–± —ç—Ç–æ–º –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –≤ —Å—Ç–∞—Ç—å–µ –≤—Å–µ–º–∏—Ä–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.` +
                        '\n' +
                        '\n' +
                        '–ö—Å—Ç–∞—Ç–∏, –º—ã —Ç–∞–∫–∂–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ —Å—Ç–∞—Ç—å—é –æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–∏—Ç–∞–Ω–∏–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º, –∑–∞—á–µ–º –æ–Ω–æ –Ω—É–∂–Ω–æ –∏ –∫–∞–∫ –µ–≥–æ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è: https://telegra.ph/nutrition-02-04'
                }

                console.error(user.weight)
                await ctx.reply(`${result}`, {
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {text: '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back'}
                            ]
                        ]
                    }
                })
            }
        })
        meals.action('back', async ctx => {
            ctx.deleteMessage()
            await ctx.scene.enter('mainMenu')
        })
        return meals
    }

    GenSportScene () {
        const sport = new Scene('sport')
        sport.enter(async (ctx) => {
            await ctx.reply('"–ñ–∏–∑–Ω—å —Ç—Ä–µ–±—É–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è", ‚Äî –≥–æ–≤–æ—Ä–∏–ª –ê—Ä–∏—Å—Ç–æ—Ç–µ–ª—å. \n' +
                '\n' +
                '–ó–∞—á–µ–º –Ω–∞–º –Ω—É–∂–µ–Ω —Å–ø–æ—Ä—Ç? –ë–ª–∞–≥–æ–¥–∞—Ä—è —Å–ø–æ—Ä—Ç—É —É—Ä–∞–≤–Ω–æ–≤–µ—à–∏–≤–∞–µ—Ç—Å—è –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –ø–æ—Å—Ç—É–ø–∞—é—â–µ–π —Å –µ–¥–æ–π —ç–Ω–µ—Ä–≥–∏–∏ –∏ –µ—ë –∑–∞—Ç—Ä–∞—Ç–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–µ–Ω –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ –∏–∑–±—ã—Ç–æ—á–Ω–æ–π –º–∞—Å—Å—ã —Ç–µ–ª–∞, –æ–∂–∏—Ä–µ–Ω–∏—è, —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç—ã—Ö –∏ –¥—Ä—É–≥–∏—Ö —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π. –ó–∞–Ω—è—Ç–∏–µ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç —É—Å–∏–ª–µ–Ω–∏—é –∫—Ä–æ–≤–æ—Ç–æ–∫–∞, –±–ª–∞–≥–æ–¥–∞—Ä—è —á–µ–º—É —É–ª—É—á—à–∞–µ—Ç—Å—è –ø–∏—Ç–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–æ–≤ –∏ —Ç–∫–∞–Ω–µ–π –æ—Ä–≥–∞–Ω–∏–∑–º–∞ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–º–∏ –≤–µ—â–µ—Å—Ç–≤–∞–º–∏. –¢–∞–∫–∂–µ —Å–ø–æ—Ä—Ç –∏–≥—Ä–∞–µ—Ç –∫–ª—é—á–µ–≤—É—é —Ä–æ–ª—å –≤ –ª–µ—á–µ–Ω–∏–µ –º–µ—Ç–∞–±–æ–ª–∏—á–µ—Å–∫–æ–≥–æ —Å–∏–Ω–¥—Ä–æ–º–∞ –∏ —Ä–µ–≥—É–ª–∏—Ä—É–µ—Ç —É—Ä–æ–≤–µ–Ω—å —Å–∞—Ö–∞—Ä–∞ –ø—Ä–∏ —Å–∞—Ö–∞—Ä–Ω–æ–º –¥–∏–∞–±–µ—Ç–µ, —É–º–µ–Ω—å—à–∞–µ—Ç –∞—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –≥–∏–ø–µ—Ä—Ç–æ–Ω–∏—á–µ—Å–∫–æ–π –±–æ–ª–µ–∑–Ω–∏. –ö —Ç–æ–º—É –∂–µ —Å–ø–æ—Ä—Ç —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Å–∏—Ö–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ.\n' +
                '\n' +
                '–ï—Å–ª–∏ –í—ã –ª—é–±–∏—Ç–µ –ø–ª–∞–≤–∞—Ç—å, —Ç–æ –ø–æ—á–µ–º—É –±—ã –í–∞–º –Ω–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –±–∞—Å—Å–µ–π–Ω, –µ—Å–ª–∏ –ª—é–±–∏—Ç–µ —Ç–∞–Ω—Ü–µ–≤–∞—Ç—å, —Ç–æ –∑–∞–ø–∏—à–∏—Ç–µ—Å—å –≤ –∫—Ä—É–∂–æ–∫ —Ç–∞–Ω—Ü–µ–≤. –õ—é–±–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –ø—Ä–∏–Ω–æ—Å—è—â–∞—è —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ, –ø—Ä–∏–Ω–µ—Å—ë—Ç –ø–æ–ª—å–∑—É –í–∞—à–µ–º—É –∑–¥–æ—Ä–æ–≤—å—é. –ï—Å—Ç—å –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥—Ä—É–≥–∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å –∏ —Ü–≤–µ—Ç. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —ç—Ç–∏, –≤–æ–∑–º–æ–∂–Ω–æ –∫–∞–∫–∏–º-—Ç–æ –∏–∑ –Ω–∏—Ö –í—ã —Ö–æ—Ç–µ–ª–∏ –∫–æ–≥–¥–∞-—Ç–æ –∑–∞–Ω—è—Ç—å—Å—è: –±–µ–≥, —Å–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–∞—è —Ö–æ–¥—å–±–∞, –ª—ã–∂–∏, –≤–µ–ª–æ–ø—Ä–æ–≥—É–ª–∫–∏, –∑–∞–Ω—è—Ç–∏—è –≤ —Ç—Ä–µ–Ω–∞–∂—ë—Ä–Ω–æ–º –∑–∞–ª–µ, –∞—ç—Ä–æ–±–∏–∫–∞, —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∏–¥—ã –±–æ—Ä—å–±—ã, —Ñ—É—Ç–±–æ–ª, –±–∞—Å–∫–µ—Ç–±–æ–ª, –≤–æ–ª–µ–π–±–æ–ª, —Ç–µ–Ω–Ω–∏—Å, –ø–∏–ª–∞—Ç–µ—Å, –π–æ–≥–∞ –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ. –°–∞–º–æ–µ –ø—Ä–æ—Å—Ç–æ–µ –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ, —á—Ç–æ –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å –∫–∞–∂–¥—ã–π ‚Äî –µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ö–æ–¥—å–±–∞ –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ (–º–∏–Ω–∏–º–∞–ª—å–Ω–æ –æ–∫–æ–ª–æ 6000 —à–∞–≥–æ–≤ –≤ –¥–µ–Ω—å).', {
                reply_markup: {
                    inline_keyboard: [
                        [
                            {text: '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back'}
                        ]
                    ]
                }
            })
        })

        sport.action('back', async ctx => {
            ctx.deleteMessage()
            await ctx.scene.enter('mainMenu')
        })
        return sport
    }

    GenStressScene () {
        const stress = new Scene('stress')
        stress.enter(async (ctx) => {
            await ctx.reply('–ù–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≤—Å–µ–π –∂–∏–∑–Ω–∏ –∫–∞–∂–¥—ã–π —á–µ–ª–æ–≤–µ–∫ —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç—Å—è —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–≤—ã–º–∏ —Å–∏—Ç—É–∞—Ü–∏—è–º–∏. –°—Ç—Ä–µ—Å—Å ‚Äî —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Å–∏—Ö–∏—á–µ—Å–∫–æ–≥–æ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è, –≤–æ–∑–Ω–∏–∫–∞—é—â–µ–µ —É —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ–¥ –≤–ª–∏—è–Ω–∏–µ–º —Å–∏–ª—å–Ω—ã—Ö –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–π.\n' +
                '\n' +
                '–í–æ –≤—Ä–µ–º—è —Å—Ç—Ä–µ—Å—Å–∞ —É —á–µ–ª–æ–≤–µ–∫–∞ –≤—ã—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —Ç–∞–∫–∏–µ –≥–æ—Ä–º–æ–Ω—ã, –∫–∞–∫ –∫–æ—Ä—Ç–∏–∑–æ–ª –∏ –∞–¥—Ä–µ–Ω–∞–ª–∏–Ω. –í —Å–ª—É—á–∞–µ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç—Ä–µ—Å—Å–∞, —ç—Ç–∏ –≥–æ—Ä–º–æ–Ω—ã –º–æ–≥—É—Ç –ø—Ä–∏–≤–æ–¥–∏—Ç—å –∫ —Ä–∞–∑—Ä—É—à–µ–Ω–∏—é –º—ã—à–µ—á–Ω–æ–π —Ç–∫–∞–Ω–∏, –Ω–∞—Ä—É—à–µ–Ω–∏—é –æ–±–º–µ–Ω–∞ –≤–µ—â–µ—Å—Ç–≤, –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—é –∂–∏—Ä–æ–≤–æ–π —Ç–∫–∞–Ω–∏, –æ—Å–ª–∞–±–ª–µ–Ω–∏—é –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞, –±—ã—Å—Ç—Ä–æ–π —É—Ç–æ–º–ª—è–µ–º–æ—Å—Ç–∏, —Ä–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —Ç.–¥. \n' +
                '\n' +
                '–ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º –≤–∞–∂–Ω–æ —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è. –ö–∞–∫ —Ç–æ–ª—å–∫–æ —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –Ω–∞–≥—Ä—É–∑–∫—É, –ø–æ–¥–¥–µ—Ä–∂–∏—Ç–µ —Å–µ–±—è, –≤—ã–ø–æ–ª–Ω–∏–≤ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ (–∫—Å—Ç–∞—Ç–∏, –æ–Ω–∏ —Ç–∞–∫–∂–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã –ø–µ—Ä–µ–¥ —Å–Ω–æ–º).', {
                reply_markup: {
                    inline_keyboard: [
                        [
                            {text: '–ü—Ä–æ—Å—Ç–æ–µ –¥—ã—Ö–∞–Ω–∏–µ', callback_data: 'exercise'},
                            {text: '–£—Å–ª–æ–∂–Ω—ë–Ω–Ω–æ–µ', callback_data: 'exercise2'},
                        ],
                        [
                            {text: '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back'}
                        ]
                    ]
                }
            })
        })

        stress.action('exercise', async ctx => {
            ctx.deleteMessage()
            await ctx.scene.enter('exercise')
        })

        stress.action('exercise2', async ctx => {
            ctx.deleteMessage()
            await ctx.scene.enter('exercise2')
        })

        stress.action('back', async ctx => {
            ctx.deleteMessage()
            await ctx.scene.enter('mainMenu')
        })
        return stress
    }

    //todo –≤–∑—è—Ç—å —Å–ª–æ–≤–∞ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Breath

    GenExerciseScene() {
        const exercise = new Scene('exercise')
        exercise.enter(async (ctx) => {
            function start() {
                ctx.reply('–†–∞—Å—Å–ª–∞–±—å—Ç–µ—Å—å –∏ —É—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å –ø–æ—É–¥–æ–±–Ω–µ–µ. –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ —Å–≤–æ—ë–º –¥—ã—Ö–∞–Ω–∏–∏.')
            }
            function inhale() {
                ctx.reply('–í–¥–æ—Ö...')
            }
            function exhale() {
                ctx.reply('–í—ã–¥–æ—Ö...')
            }
            function stop() {
                ctx.scene.enter('completed')
            }
            await ctx.reply('–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –Ω–∞ –¥—ã—Ö–∞–Ω–∏–µ.')
            setTimeout(start, 3000)
            setTimeout(inhale, 10000)
            setTimeout(exhale, 14000)
            setTimeout(inhale, 18000)
            setTimeout(exhale, 22000)
            setTimeout(inhale, 26000)
            setTimeout(exhale, 30000)
            setTimeout(inhale, 34000)
            setTimeout(exhale, 38000)
            setTimeout(inhale, 42000)
            setTimeout(exhale, 46000)
            setTimeout(inhale, 50000)
            setTimeout(exhale, 54000)
            setTimeout(inhale, 58000)
            setTimeout(exhale, 62000)
            setTimeout(stop, 67000)
        })
        return exercise
    }

    GenExercise2Scene() {
        const exercise2 = new Scene('exercise2')
        exercise2.enter(async (ctx) => {
            function start() {
                ctx.reply('–†–∞—Å—Å–ª–∞–±—å—Ç–µ—Å—å –∏ —É—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å –ø–æ—É–¥–æ–±–Ω–µ–µ. –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ —Å–≤–æ—ë–º –¥—ã—Ö–∞–Ω–∏–∏.')
            }
            function inhale() {
                ctx.reply('–í–¥–æ—Ö...')
            }
            function hold() {
                ctx.reply('–ó–∞–¥–µ—Ä–∂–∏—Ç–µ –¥—ã—Ö–∞–Ω–∏–µ...')
            }
            function exhale() {
                ctx.reply('–ú–µ–¥–ª–µ–Ω–Ω—ã–π –≤—ã–¥–æ—Ö...')
            }
            function stop() {
                ctx.scene.enter('completed')
            }
            await ctx.reply('–≠—Ç–æ —É—Å–ª–æ–∂–Ω—ë–Ω–Ω–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –Ω–∞ –¥—ã—Ö–∞–Ω–∏–µ. –ü—Ä–∏–ª–æ–∂–∏—Ç–µ –∫–æ–Ω—á–∏–∫ —Å–≤–æ–µ–≥–æ —è–∑—ã–∫–∞ –∫ –±—É–≥–æ—Ä–∫—É –Ω—ë–±–∞ –≤–æ–∑–ª–µ –≤–µ—Ä—Ö–Ω–∏—Ö –∑—É–±–æ–≤. \n \n–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ –ø–æ—á—É–≤—Å—Ç–≤—É–µ—Ç–µ –≥–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ')
            setTimeout(start, 3000)
            setTimeout(inhale, 10000)
            setTimeout(hold, 14000)
            setTimeout(exhale, 21000)
            setTimeout(inhale, 29000)
            setTimeout(hold, 33000)
            setTimeout(exhale, 40000)
            setTimeout(inhale, 48000)
            setTimeout(hold, 52000)
            setTimeout(exhale, 59000)
            setTimeout(inhale, 67000)
            setTimeout(hold, 71000)
            setTimeout(exhale, 78000)
            setTimeout(stop, 86000)
        })
        return exercise2
    }

    GenCompletedScene() {
        const completed = new Scene('completed')
        completed.enter(async (ctx) => {
            await ctx.reply('–•–æ—Ä–æ—à–∞—è —Ä–∞–±–æ—Ç–∞. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.', {
                reply_markup: {
                    inline_keyboard: [
                        [
                            {text: '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å', callback_data: 'exercise'},
                            {text: '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back'}
                        ]
                    ]
                }
            })
        })
        completed.action('exercise', async ctx => {
            ctx.deleteMessage()
            await ctx.scene.enter('exercise')
        })

        completed.action('back', async ctx => {
            ctx.deleteMessage()
            await ctx.scene.enter('mainMenu')
        })
        return completed
    }

    GenDeleteDataScene() {
        const deleteData = new Scene('deleteData')
        deleteData.enter(async (ctx) => {
            await ctx.reply(`–ú—ã —Ö—Ä–∞–Ω–∏–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –í–∞—Å, –≤—Å—è –æ–Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ü–µ–ª–µ–π. –≠—Ç–æ —Ç–æ–ª—å–∫–æ:\n1. –í–∞—à –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤ Telegram (–Ω—É–∂–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã –ª—é–±–æ–≥–æ –±–æ—Ç–∞, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–∞–∫–æ–π-—Ç–æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π)\n2. –í–∞—à —Ä–æ—Å—Ç, –≤–µ—Å, –≤–æ–∑—Ä–∞—Å—Ç –∏ —É—Ä–æ–≤–µ–Ω—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–Ω—É–∂–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞—Å—á—ë—Ç–æ–≤ –∏ –¥–∞—á–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π)\n3. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–∏—Ç—ã—Ö —Å—Ç–∞–∫–∞–Ω–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ —Å—É—Ç–∫–∏.\n\n–ï—Å–ª–∏ –í—ã –ø–æ –∫–∞–∫–∏–º-–ª–∏–±–æ –ø—Ä–∏—á–∏–Ω–∞–º —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ —Å –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞, –í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ.`, {
                reply_markup: {
                    inline_keyboard: [
                        [
                            {text: '–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–±–æ –º–Ω–µ', callback_data: 'delete'},
                            {text: '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back'}
                        ]
                    ]
                }
            })
        })
        deleteData.action('delete', async ctx => {
            ctx.deleteMessage()
            await ctx.reply(`–í—ã —É–≤–µ—Ä–µ–Ω—ã –Ω–∞ 100%, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–±–µ?`, {
                reply_markup: {
                    inline_keyboard: [
                        [
                            {text: '–î–∞, —è –Ω–∞ 100% —É–≤–µ—Ä–µ–Ω(–∞)', callback_data: 'imsure'},
                            {text: '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back'}
                        ]
                    ]
                }
            })
        })

        deleteData.action('imsure', async ctx => {
            ctx.deleteMessage()
            let data = fs.readFileSync("db.txt", "utf8")
            if (data.includes(`"id":${ctx.callbackQuery.from.id}`)) {
                let str = data.slice(data.indexOf(`"id":${ctx.callbackQuery.from.id}`) - 1, data.indexOf('\n', data.indexOf(`"id":${ctx.callbackQuery.from.id}` + ' -------')))
                ctx.reply(str)
                data = data.replace(str, '')

                fs.writeFileSync("db.txt", '')
                fs.appendFileSync("db.txt", data + '\n')
                await ctx.reply('–í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ –í–∞—Å —É–¥–∞–ª–µ–Ω—ã. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤–Ω–æ–≤—å, –Ω–∞–∂–∞–≤ –Ω–∞ /start')
            }

        })

        deleteData.action('back', async ctx => {
            ctx.deleteMessage()
            await ctx.scene.enter('mainMenu')
        })
        return deleteData
    }

    GenDisclaimerScene() {
        const disclaimer = new Scene('disclaimer')
        disclaimer.enter(async (ctx) => {
            await ctx.reply('–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–∞–Ω–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞, –≤–∫–ª—é—á–∞—è —Ç–µ–∫—Å—Ç, –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ —Ä–µ—Å—É—Ä—Å—ã –∏ –¥—Ä—É–≥–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã (¬´–ú–∞—Ç–µ—Ä–∏–∞–ª—ã¬ª), –Ω–æ—Å—è—Ç –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä. –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–∞–Ω–Ω–æ–≥–æ –°–µ—Ç–µ–≤–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞ –Ω–µ –∑–∞–º–µ–Ω—è—é—Ç —Å–æ–±–æ–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏–ª–∏ –ª–µ—á–µ–Ω–∏—è, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏. –í—Å–µ–≥–¥–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ —Å–≤–æ–µ–º—É –≤—Ä–∞—á—É –∏–ª–∏ –¥—Ä—É–≥–æ–º—É –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–º—É —Ä–∞–±–æ—Ç–Ω–∏–∫—É –ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å —É –≤–∞—Å –≤ —Å–≤—è–∑–∏ —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∑–¥–æ—Ä–æ–≤—å—è. –ï—Å–ª–∏ –≤—ã –ø–æ–ª–∞–≥–∞–µ—Ç–µ, —á—Ç–æ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è, –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–≤–æ–µ–º—É –≤—Ä–∞—á—É –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π —Å–ª—É–∂–±—ã 112. Health-coaching bot –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –∏ –Ω–µ —Ä–µ–∫–ª–∞–º–∏—Ä—É–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∞–Ω–∞–ª–∏–∑–æ–≤, –≤—Ä–∞—á–µ–π, –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –ø—Ä–æ—Ü–µ–¥—É—Ä, –∞ —Ç–∞–∫–∂–µ –Ω–µ –≤—ã—Å—Ç—É–ø–∞–µ—Ç –≤ –∑–∞—â–∏—Ç—É –∫–∞–∫–∏—Ö-–ª–∏–±–æ —Ç–æ—á–µ–∫ –∑—Ä–µ–Ω–∏—è –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Å–≤–µ–¥–µ–Ω–∏–π, —É–ø–æ–º–∏–Ω–∞–µ–º—ã—Ö –≤ –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö –¥–∞–Ω–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞. –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Ä–µ—à–µ–Ω–∏—è, –ø—Ä–∏–Ω–∏–º–∞–µ–º—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–∞–∫–∏—Ö-–ª–∏–±–æ —Å–≤–µ–¥–µ–Ω–∏–π, —É–ø–æ–º–∏–Ω–∞–µ–º—ã—Ö –≤ –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö –¥–∞–Ω–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞, ‚Äî –Ω–µ—Å–µ—Ç–µ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤—ã –Ω–∞ –≤–∞—à —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–∏—Å–∫.')
        })
        return disclaimer
    }
}

module.exports = SceneGenerator